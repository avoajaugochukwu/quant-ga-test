name: Terraform Apply Main Branch

on:
  push:
    # branches-ignore:
    #   - main
    paths:
      - '**/*.tf'

jobs:
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }} 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::127350417158:role/github_oidc_role
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Check if prod workspace exists and create/select it
        run: |
          if terraform workspace list | grep -q "prod"; then
            echo "Workspace 'prod' exists. Selecting it."
            terraform workspace select prod
          else
            echo "Workspace 'prod' does not exist. Creating it."
            terraform workspace new prod
          fi
      
      - name: Terraform Plan
        run: terraform plan -var-file=prod.tfvars -out=tfplan
      
      - name: Post Terraform Plan as PR Comment
        if: ${{ github.event_name == 'pull_request' }}  # Only post on PRs
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('tfplan.txt', 'utf8');
            const planMessage = `
            ## Terraform Plan Output
            \`\`\`hcl
            ${plan}
            \`\`\`
            `;

            const { context } = github;
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: planMessage
            });

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve tfplan